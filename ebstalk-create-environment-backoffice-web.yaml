AWSTemplateFormatVersion: '2010-09-09'
Description: "AWS Elastic Beanstalk environment"

# Mappings can be used to mimic static variables/constants within the template!
Mappings:
  SettingsMap:
    # These settings will be the same for all regions
    global:
      HealthCheckPort: 80
      IamInstanceProfile: aws-elasticbeanstalk-ec2-role
      AutoScalingMinSize: 1
      AutoScalingMaxSize: 1
      RootVolumeSize: 50
  EbStalkCNameAccountParameter:
    # Added to ensure global uniqueness between Test and Prod accounts.
    "434495414204":
      urlCName: test
    "988099092108":
      urlCName: prod
  CloudFormation:
    Architecture:
      Version: 1.0
    MigrationAssistanceProgram:
      ServerId: d-server-02bezuej0o1ftf

Parameters:
  Application:
    Type: String
    Description: The Application tag is used to designate the application of the associated AWS resource. In this capacity application does not refer to an installed software component, but rather the overall business application that the resource supports.
    Default: myunity
  ResourceName:
    Type: String
  CostCenter:
    Type: String
  Environment:
    Type: String
    Description: The environment tag (e.g. dev, qa, prod, etc.) is used to designate the Environment Stage of the associated AWS resource.
  ResourceType:
    Type: String
    AllowedValues:
      - Application
      - "Shared Service"
      - "Support System"
    Default: Application
  EBStalkApplicationNameParameter:
    Type: String
    MinLength: 1
    Description: "The name of the Elastic Beanstalk *application* that this newly created Elastic Beanstalk environment is to be associated with. NOTE: This application must preexist *before* creating this Elastic Beanstalk environment."
  StackIDParameter:
    Type: String
    MinLength: 1
    Description: "The prefix that will be used to ensure consistent naming convention of resources associated with this Elastic Beanstalk environment (e.g P8)."
  DevelopmentEnvironmentNameParameter:
    Type: String
    Default: test
    AllowedValues:
      - dev
      - test
      - staging
      - uat
      - train
      - prod
    Description: The environment (e.g. test, staging, live) in which this Elastic Beanstalk application is running. Used for tagging.
  EnvironmentIndexParameter:
    Type: String
    MinLength: 1
    AllowedValues:
      - 1
      - 2
    Default: 1
    Description: "The suffix (e.g. 1 or 2) that will be used to ensure uniqueness of the Elastic Beanstalk environment name and other associated resources."
  EnvironmentCnameSuffixParameter:
    Type: String
    MinLength: 1
    Default: front
    AllowedValues:
      - front
      - back
    Description: "The CName suffix (e.g. front/back) that will be used to ensure blue/green deployments of the Elastic Beanstalk environment."
  InstanceTypeParameter:
    Type: String
    MinLength: 1
    Default: t3a.large
    Description: This size of the EC2 instances to be deployed within this environment.
  SolutionStackNameParameter:
    Type: String
    Default: 64bit Windows Server 2019 v2.10.1 running IIS 10.0
    Description: The name of an Elastic Beanstalk solution stack that this configuration will use. See https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/concepts.platforms.html.
  LoadBalancerTypeParameter:
    Type: String
    Default: application
    AllowedValues:
      - classic
      - application
      - network
    Description: Load balancer type.
  VpcIdParameter:
    Description: "VPC Id"
    Type: AWS::EC2::VPC::Id
  PublicSubnetsParameter:
    Description: "Public Subnets attached"
    Type: "List<AWS::EC2::Subnet::Id>"
  PrivateSubnetsParameter:
    Description: "Private Subnets attached"
    Type: "List<AWS::EC2::Subnet::Id>"
  LbCertArnParameter:
    Type: String
  AppELBSecurityGroupParameter:
    Description: "Application Load Balancer Security Group"
    Type: AWS::EC2::SecurityGroup::Id
  AppSecurityGroupParameter:
    Description: "VPC Application Security Group"
    Type: AWS::EC2::SecurityGroup::Id
  BastionHostSecurityGroupParameter:
    Description: "Bastion Security Group"
    Type: AWS::EC2::SecurityGroup::Id
  AutomaticPatches:
    Type: String
    AllowedValues:
      - general-prod
      - general-dev
  PatchGroup:
    Type: String
    AllowedValues:
      - general-windows-prod
      - general-windows-dev
  EC2KeyNameParam:
    Type: String
    AllowedValues:
      - myunity-dev
      - myunity-qa
      - myunity-uat
      - myunity-prod


Conditions:
    UseAlb: !Equals [ !Ref LoadBalancerTypeParameter, 'application' ]

Resources:
  # Create the Elastic Beanstalk environment
  AppElasticBeanstalkEnvironment:
    Type: AWS::ElasticBeanstalk::Environment
    Properties:
      ApplicationName: !Ref EBStalkApplicationNameParameter
      EnvironmentName: !Join [ "-", [ !Ref StackIDParameter, !Ref EnvironmentIndexParameter ] ]
      CNAMEPrefix: !Join [ "-", ["myunity", !Ref StackIDParameter, !Ref EnvironmentCnameSuffixParameter, !FindInMap [EbStalkCNameAccountParameter, !Ref "AWS::AccountId", urlCName] ] ]
      Description: !Join [ "-", [ !Ref StackIDParameter, !Ref EnvironmentIndexParameter ] ]
      SolutionStackName: !Ref SolutionStackNameParameter
      OptionSettings:
      - Namespace: aws:elasticbeanstalk:container:dotnet:apppool
        OptionName: "Target Runtime"
        Value: 4.0

      # Environment Variables
      - Namespace: aws:elasticbeanstalk:application:environment
        OptionName: MUE_StackID
        Value: !Ref StackIDParameter

      # Environment Specific
      - Namespace: aws:elasticbeanstalk:monitoring
        OptionName: "Automatically Terminate Unhealthy Instances"
        Value: true
      - Namespace: aws:elasticbeanstalk:sns:topics
        OptionName: Notification Endpoint
        Value: DevOpsSGF@ntst.onmicrosoft.com
        OptionName: Notification Protocol
        Value: email
        #TODO: pass above as parameter
      # Elastic Beanstalk environment settings
      - Namespace: aws:elasticbeanstalk:environment
        OptionName: EnvironmentType
        Value: LoadBalanced
      - Namespace: aws:elasticbeanstalk:environment
        OptionName: LoadBalancerType
        Value: !Ref LoadBalancerTypeParameter

      - Namespace: aws:elasticbeanstalk:application
        OptionName: "Application Healthcheck URL"
        Value: "HTTP:80/"

      - Namespace: aws:elasticbeanstalk:environment:process:default
        OptionName: HealthCheckInterval
        Value: 5
      - Namespace: aws:elasticbeanstalk:environment:process:default
        OptionName: HealthCheckPath
        Value: "/"
      - Namespace: aws:elasticbeanstalk:environment:process:default
        OptionName: HealthCheckTimeout
        Value: 4
      - Namespace: aws:elasticbeanstalk:environment:process:default
        OptionName: HealthyThresholdCount
        Value: 3
      - Namespace: aws:elasticbeanstalk:environment:process:default
        OptionName: UnhealthyThresholdCount
        Value: 5

      # Use 443/https from the alb to web servers
      - Namespace: aws:elasticbeanstalk:environment:process:default
        OptionName: Port
        Value: 443
      - Namespace: aws:elasticbeanstalk:environment:process:default
        OptionName: Protocol
        Value: HTTPS


      # Auto-scaling settings
      - Namespace: aws:autoscaling:launchconfiguration
        OptionName: InstanceType
        Value: !Ref InstanceTypeParameter
      - Namespace: aws:autoscaling:launchconfiguration
        OptionName: IamInstanceProfile
        Value: !FindInMap [SettingsMap, global, "IamInstanceProfile"]
      - Namespace: aws:elasticbeanstalk:environment
        OptionName: ServiceRole
        Value: aws-elasticbeanstalk-service-role
      - Namespace: aws:autoscaling:launchconfiguration
        OptionName: RootVolumeSize
        Value: !FindInMap [SettingsMap, global, "RootVolumeSize"]
      - Namespace: aws:autoscaling:launchconfiguration
        OptionName: RootVolumeType
        Value: gp3
      - Namespace: aws:autoscaling:launchconfiguration
        OptionName: RootVolumeIOPS
        Value: 3000
      - Namespace: aws:autoscaling:asg
        OptionName: MinSize
        Value: !FindInMap [SettingsMap, global, "AutoScalingMinSize"]
      - Namespace: aws:autoscaling:asg
        OptionName: MaxSize
        Value: !FindInMap [SettingsMap, global, "AutoScalingMaxSize"]

      # Load-balancer settings
      - Namespace: aws:elb:loadbalancer
        OptionName: CrossZone
        Value: true
      - Namespace: aws:elb:loadbalancer
        OptionName: SSLCertificateId
        Value: !Ref LbCertArnParameter
      - Namespace: aws:elb:policies
        OptionName: ConnectionSettingIdleTimeout
        Value: 600
      - Namespace: aws:elb:healthcheck
        OptionName: UnhealthyThreshold
        Value: 5
      - Namespace: aws:elb:healthcheck
        OptionName: Timeout
        Value: 4
      - Namespace: aws:elb:healthcheck
        OptionName: HealthyThreshold
        Value: 3
      - Namespace: aws:elb:healthcheck
        OptionName: Interval
        Value: 5

      - Namespace: aws:elasticbeanstalk:command
        OptionName: Timeout
        Value: 3600

      # Networking/Security Group settings
      - Namespace: aws:ec2:vpc
        OptionName: VPCId
        Value: !Ref VpcIdParameter
      - Namespace: aws:ec2:vpc
        OptionName: Subnets
        Value: !Join [",", !Ref PrivateSubnetsParameter]
      - Namespace: aws:ec2:vpc
        OptionName: ELBSubnets
        Value: !Join [",", !Ref PublicSubnetsParameter]
      - Namespace: aws:ec2:vpc
        OptionName: AssociatePublicIpAddress
        Value: false
      # Assign the ELB Security Group that was created in this stack to the ELB
      - Namespace: aws:elb:loadbalancer
        OptionName: ManagedSecurityGroup
        Value: !Ref AppELBSecurityGroupParameter
      - Namespace: aws:elb:loadbalancer
        OptionName: SecurityGroups
        Value: !Ref AppELBSecurityGroupParameter
      # Assign the Security Group that was created in this stack to the EC2 instances, as well as any other security groups that were defined in the mappings section
      - Namespace: aws:autoscaling:launchconfiguration
        OptionName: SecurityGroups
        Value: !Ref AppSecurityGroupParameter
        # Add an additional listener on the ELB for the healthcheck
      - Namespace: !Join [ ":", [ aws, elb, listener, !FindInMap [SettingsMap, global, "HealthCheckPort"] ] ]
        OptionName: InstancePort
        Value: !FindInMap [SettingsMap, global, "HealthCheckPort"]


      - Namespace: aws:elbv2:loadbalancer
        OptionName: IdleTimeout
        Value: 600

      # Listen on 80/http, for redirect to 443/https
      - Namespace: aws:elbv2:listener:80
        OptionName: ListenerEnabled
        Value: true
      - Namespace: aws:elbv2:listener:80
        OptionName: Protocol
        Value: HTTP

      # Listen on 443/https
      - Namespace: aws:elbv2:listener:443
        OptionName: Protocol
        Value: HTTPS
      - Namespace: aws:elbv2:listener:443
        OptionName: SSLCertificateArns
        Value: !Ref LbCertArnParameter

      - Namespace: aws:autoscaling:launchconfiguration
        OptionName: EC2KeyName
        Value: !Join [ "-", [ !Ref EC2KeyNameParam, !Ref "AWS::Region" ] ]

      - Namespace: aws:autoscaling:launchconfiguration
        OptionName: SSHSourceRestriction
        Value: !Join [ ",", [ tcp, 3389, 3389, !Ref BastionHostSecurityGroupParameter ]]

      # Create the tags that are required specifically for the dropwizard dumptruck app
      Tags:
        - Key: Name
          Value: !Join ["-", [!Ref Application, !Ref Environment, !Ref ResourceName]]
        - Key: Application
          Value: !Ref Application
        - Key: Environment
          Value: !Ref Environment
        - Key: CostCenter
          Value: !Ref CostCenter
        - Key: Type
          Value: !Ref ResourceType
        - Key: ArchitectureVersion
          Value: !FindInMap [CloudFormation, Architecture, Version]
        - Key: map-migrated
          Value: !FindInMap [CloudFormation, MigrationAssistanceProgram, ServerId]
        - Key: app
          Value: backoffice-web
        - Key: env
          Value: !Ref DevelopmentEnvironmentNameParameter
        - Key: automatic-patches
          Value: !Ref AutomaticPatches
        - Key: 'Patch Group'
          Value: !Ref PatchGroup

Outputs:
  BackOfficeWeb:
    Description: A reference to the back office web resource ID
    Value: !Ref AppElasticBeanstalkEnvironment